<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="   
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd   
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<aop:config>
		<aop:advisor pointcut="execution(* com.neusoft.mid.comp.boss.server.ws.impl.processor.*.*(..))" advice-ref="txAdvice" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- Spring 对事务的处理 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
		<property name="maxWait" value="1000" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="20" />
		<property name="maxIdle" value="5" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="15000" />
		<property name="numTestsPerEvictionRun" value="20" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
	</bean>

	<!-- 定义 sqlSessionFactory，configLocation指向mybatis的配置文件，mapperLocations指向mybatis的mapper xml文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/conf/mybatis/sqlMapConfig.xml" />
		<property name="mapperLocations" value="classpath:/com/neusoft/mid/comp/boss/mybatis/xml/*Mapper.xml" />
	</bean>

	<!-- 扫描非批量操作的mybatis的mapper类，让他们能够使用autowired注入, 在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.neusoft.mid.comp.boss.mybatis.xmlmapper" />
	</bean>
</beans>
